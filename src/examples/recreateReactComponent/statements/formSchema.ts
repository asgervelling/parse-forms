import ts, { factory } from "typescript";

export default function formSchema() {
  return factory.createVariableStatement(
    undefined,
    factory.createVariableDeclarationList(
      [
        factory.createVariableDeclaration(
          factory.createIdentifier("FormSchema"),
          undefined,
          undefined,
          factory.createCallExpression(
            factory.createPropertyAccessExpression(
              factory.createIdentifier("z"),
              factory.createIdentifier("object")
            ),
            undefined,
            [
              factory.createObjectLiteralExpression(
                [
                  factory.createPropertyAssignment(
                    factory.createIdentifier("name"),
                    factory.createCallExpression(
                      factory.createPropertyAccessExpression(
                        factory.createCallExpression(
                          factory.createPropertyAccessExpression(
                            factory.createIdentifier("z"),
                            factory.createIdentifier("string")
                          ),
                          undefined,
                          []
                        ),
                        factory.createIdentifier("min")
                      ),
                      undefined,
                      [factory.createNumericLiteral("1")]
                    )
                  ),
                  factory.createPropertyAssignment(
                    factory.createIdentifier("age"),
                    factory.createCallExpression(
                      factory.createPropertyAccessExpression(
                        factory.createCallExpression(
                          factory.createPropertyAccessExpression(
                            factory.createCallExpression(
                              factory.createPropertyAccessExpression(
                                factory.createPropertyAccessExpression(
                                  factory.createIdentifier("z"),
                                  factory.createIdentifier("coerce")
                                ),
                                factory.createIdentifier("number")
                              ),
                              undefined,
                              []
                            ),
                            factory.createIdentifier("nonnegative")
                          ),
                          undefined,
                          []
                        ),
                        factory.createIdentifier("max")
                      ),
                      undefined,
                      [factory.createNumericLiteral("122")]
                    )
                  ),
                  factory.createPropertyAssignment(
                    factory.createIdentifier("signUpForNewsletter"),
                    factory.createCallExpression(
                      factory.createPropertyAccessExpression(
                        factory.createIdentifier("z"),
                        factory.createIdentifier("boolean")
                      ),
                      undefined,
                      []
                    )
                  ),
                  factory.createPropertyAssignment(
                    factory.createIdentifier("email"),
                    factory.createCallExpression(
                      factory.createPropertyAccessExpression(
                        factory.createCallExpression(
                          factory.createPropertyAccessExpression(
                            factory.createIdentifier("z"),
                            factory.createIdentifier("string")
                          ),
                          undefined,
                          []
                        ),
                        factory.createIdentifier("email")
                      ),
                      undefined,
                      []
                    )
                  ),
                ],
                true
              ),
            ]
          )
        ),
      ],
      ts.NodeFlags.Const | ts.NodeFlags.Constant | ts.NodeFlags.Constant
    )
  );
}
